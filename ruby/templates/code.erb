var sections = ['Welcome', 'Games', 'Filters', 'Aspects'];

var game_offset    = 0;
var game_count     = 1;
var include_mask_0 = 0;
var include_mask_1 = 0;
var exclude_mask_0 = 0;
var exclude_mask_1 = 0;

function set_display( name, mode) {
    document.getElementById( name).style.display = mode;
}

function set_section( name) {
    set_display( name + '_menu_on',  'inline');
    set_display( name + '_menu_off', 'none');
    set_display( name + '_div',      'block');

    for (var i = 0; i < sections.length; i++) {
        var s = sections[i];
        if (s != name) {
            set_display(s + '_menu_on', 'none');
            set_display(s + '_menu_off', 'inline');
            set_display(s + '_div', 'none');
        }
    }

    eval( 'refresh_' + name + '();');
}

function get_menu() {
    var menu = '<table class="menu"><tr>';
    for (var i = 0; i < sections.length; i++) {
        var s = sections[i];
        menu = menu + '<td>' +
'<span id="' + s + '_menu_on" class="menu_on">' + s + '</span>' +
'<span id="' + s + '_menu_off" class="menu_off" onclick="set_section(' + "'" + s + "'" + ')">' + s + '</span>' +
        '</td>';
    }
    return menu + '</tr></table>';
}

function drag(ev,index) {
  ev.dataTransfer.setData("index", index);
}

function drop(ev) {
  ev.preventDefault();
  var index = ev.dataTransfer.getData("index");
  var flag = '';
  var className = ev.target.className;
  if ( className.includes( "include") ) {
      flag = "Y";
  }
  if ( className.includes( "exclude") ) {
      flag = "N";
  }
  window.localStorage.setItem( "pagoda.aspect." + index, flag);
  refresh_Filters();
  game_offset = 0;
}

function make_button( name, index, status) {
  return '<div class="button ' + status + '"' +
      ' draggable="true"' +
      ' ondragstart="drag( event, ' + index + ')"' +
      ' ondragover="event.preventDefault()"' +
      ' ondrop="drop(event)">' +name + '</div>';
}

function add_button( name, index, contents) {
  var flag = window.localStorage.getItem( "pagoda.aspect." + index);
  var status = 'ignore';
  if (flag == 'Y') {status = 'include';}
  if (flag == 'N') {status = 'exclude';}
  button = make_button( name, index, status);
  if (flag == 'Y') {
      contents.included = contents.included + button;
  }
  else if (flag == 'N') {
      contents.excluded = contents.excluded + button;
  }
  else {
      contents.unused = contents.unused + button;
  }
}

function refresh_Welcome() {}

function refresh_Games() {
 list_games();
}

function refresh_Filters() {
  const contents = {excluded:'', included:'', unused: ''};
  <% aspects.each_pair do |n,info| %>
    add_button( '<%= info['title'] ? info['title'] : n %>', <%= info['index'] %>, contents);
  <% end %>
  var excluded_box = document.getElementById( "exclude");
  excluded_box.innerHTML = contents.excluded;
  var included_box = document.getElementById( "include");
  included_box.innerHTML = contents.included;
  var unused_box = document.getElementById( "unused");
  unused_box.innerHTML = contents.unused;
  refresh_counts();
}

function refresh_counts() {
  refresh_masks();
  game_count = count_selected();
  let count  = "Games (" + game_count + ")";
  document.getElementById( "Games_menu_on").innerHTML = count;
  document.getElementById( "Games_menu_off").innerHTML = count;
}

function refresh_Aspects() {}

function refresh_masks() {
    include_mask_0 = 0;
    include_mask_1 = 0;
    exclude_mask_0 = 0;
    exclude_mask_1 = 0;

    for (var index = 0; index < 32; index++) {
        var flag = window.localStorage.getItem( "pagoda.aspect." + index);

        if (flag == 'Y') {
            include_mask_0 |= (1 << index);
        }

        if (flag == 'N') {
            exclude_mask_0 |= (1 << index);
        }
    }

    for (var index = 32; index < 64; index++) {
        var flag = window.localStorage.getItem( "pagoda.aspect." + index);

        if (flag == 'Y') {
            include_mask_1 |= (1 << (index - 32));
        }

        if (flag == 'N') {
            exclude_mask_1 |= (1 << (index - 32));
        }
    }
}

function is_selected( index) {
    let g = games[index];
    if ((g[3] & include_mask_0) != include_mask_0) {return false;}
    if ((g[4] & include_mask_1) != include_mask_1) {return false;}
    if ((g[3] & exclude_mask_0) != 0) {return false;}
    if ((g[4] & exclude_mask_1) != 0) {return false;}
    return true;
}

function count_selected() {
    let count = 0;
    for (var i = 0; i < games.length; i++) {
        if ( is_selected( i) ) {count ++;}
    }
    return count;
}

function list_selected( html) {
    var listed = 0;
    var skipped = 0;
    for (var i = 0; i < games.length; i++) {
        if ( is_selected( i) ) {
            if (skipped < game_offset) {
                skipped += 1;
            } else if (listed > 50) {
                break;
            } else {
                listed += 1;
                html.push( '<tr><td>' + (listed + game_offset) + '</td><td>');

                let g = games[i];
                html.push( '<a target="_blank" href="https://alofmethbin.com/pagoda/game.php?id=' + g[1] + '">' + g[0] + '</a>');

                html.push( '</td><td>' + g[2] + '</td><td>');

                if (g[6] != '') {
                    html.push( ' <a target="_blank" href="https://www.gog.com/game/' + g[6] + '">GOG</a>');
                }

                if (g[5] != '') {
                    html.push( ' <a target="_blank" href="https://store.steampowered.com/app/' + g[5] + '">Steam</a>');
                }
            }
        }
    }
}

function list_games() {
     var html = ['<table class="games_title"><tr><td><span class="'];

     if (game_offset > 0) {
         html.push( 'active" onclick="previous_games()');
     } else {
         html.push( 'inactive');
     }

     var limit = game_count;
     if ((game_offset + 50) < game_count) {
         limit = game_offset + 50;
     }

     html.push( '">&lt;&lt;</span></td><td>Games ' + (game_offset + 1) + ' to ' + limit);
     html.push( '</td><td><span class="');

     if ((game_offset + 50) < game_count) {
         html.push( 'active" onclick="next_games()');
     } else {
         html.push( 'inactive');
     }

     html.push( '">&gt;&gt;</span></td></tr></table>');
     html.push( '<table class="games"><tr><th>No</th><th>Game</th><th>Year</th><th>Buy</th></tr>');
     list_selected( html);
     html.push( '</table>');
     var games_div = document.getElementById( "Games_div");
     games_div.innerHTML = html.join( '');
}

function previous_games() {
     if (game_offset > 0) {
         game_offset -= 50;
         list_games();
     }
}

function next_games() {
     if ((game_offset + 50) < game_count) {
         game_offset += 50;
         list_games();
     }
}
