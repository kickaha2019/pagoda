<html>
<head>
  <style>
    body {background: black}
    .page {margin-left: auto; margin-right: auto; width: 890px}
    .container {background: grey; width: 800px; min-height: 200px}
    .frame1 {padding: 20px; border: 5px solid cyan}
    .frame2 {padding: 20px; margin-top: 10px; position: relative}
    .title {position: absolute; top: 15px; left: 45px; display: flex; width: 800px}
    .title div {background: cyan; border-top: 5px solid black; border-bottom: 5px solid black;
      flex-grow: 1; height: 5px}
    .title span {font-size: 20px; color: cyan; background: black; position: relative; top: -5px; left: 0px;
      padding-left: 10px; padding-right: 10px}
    .button {display: inline-block; border: 1px solid black; border-radius: 5px; background: cyan; font-size: 24px;
      margin: 5px; padding: 2px}
    .menu {margin-left: auto; margin-right: auto; font-size: 30px; margin-bottom: 10px}
    .menu_on {color: white}
    .menu_off {color: cyan; text-decoration: underline; cursor: pointer;}
    .menu td {padding: 10px}
    .aspects {margin-left: auto; margin-right: auto; color: white; font-size: 30px; margin-bottom: 10px}
    .aspects td, .aspects th {padding: 10px; border: 1px solid cyan; color: cyan}
    .aspects {border-collapse: collapse}
    .blurb {margin-left: auto; margin-right: auto; color: cyan; font-size: 20px; max-width: 750px}
  </style>
  <script>
    var sections = ['Welcome', 'Filters', 'Aspects'];

    function set_display( name, mode) {
        document.getElementById( name).style.display = mode;
    }

    function set_section( name) {
        set_display( name + '_menu_on',  'inline');
        set_display( name + '_menu_off', 'none');
        set_display( name + '_div',      'block');

        for (var i = 0; i < sections.length; i++) {
            var s = sections[i];
            if (s != name) {
                set_display(s + '_menu_on', 'none');
                set_display(s + '_menu_off', 'inline');
                set_display(s + '_div', 'none');
            }
        }

        eval( 'refresh_' + name + '();');
    }

    function get_menu() {
        var menu = '<table class="menu"><tr>';
        for (var i = 0; i < sections.length; i++) {
            var s = sections[i];
            menu = menu + '<td>' +
  '<span id="' + s + '_menu_on" class="menu_on">' + s + '</span>' +
  '<span id="' + s + '_menu_off" class="menu_off" onclick="set_section(' + "'" + s + "'" + ')">' + s + '</span>' +
            '</td>';
        }
        return menu + '</tr></table>';
    }
      function drag(ev,index) {
          ev.dataTransfer.setData("index", index);
      }
      function drop(ev) {
          ev.preventDefault();
          var index = ev.dataTransfer.getData("index");
          var flag = '';
          var className = ev.target.className;
          if ( className.includes( "include") ) {
              flag = "Y";
          }
          if ( className.includes( "exclude") ) {
              flag = "N";
          }
          window.localStorage.setItem( "pagoda.aspect." + index, flag);
          refresh_Filters();
      }
      function make_button( name, index, status) {
          return '<div class="button ' + status + '"' +
              ' draggable="true"' +
              ' ondragstart="drag( event, ' + index + ')"' +
              ' ondragover="event.preventDefault()"' +
              ' ondrop="drop(event)">' +name + '</div>';
      }

      function add_button( name, index, contents) {
          var flag = window.localStorage.getItem( "pagoda.aspect." + index);
          var status = 'ignore';
          if (flag == 'Y') {status = 'include';}
          if (flag == 'N') {status = 'exclude';}
          button = make_button( name, index, status);
          if (flag == 'Y') {
              contents.included = contents.included + button;
          }
          else if (flag == 'N') {
              contents.excluded = contents.excluded + button;
          }
          else {
              contents.unused = contents.unused + button;
          }
      }

      function refresh_Welcome() {}

      function refresh_Filters() {
          const contents = {excluded:'', included:'', unused: ''};
          <% aspects.each_pair do |n,info| %>
            add_button( '<%= n %>', <%= info['index'] %>, contents);
          <% end %>
          var excluded_box = document.getElementById( "exclude");
          excluded_box.innerHTML = contents.excluded;
          var included_box = document.getElementById( "include");
          included_box.innerHTML = contents.included;
          var unused_box = document.getElementById( "unused");
          unused_box.innerHTML = contents.unused;
      }

    function refresh_Aspects() {}
  </script>
</head>
<body>
<div class="page">
  <nav id="menu"></nav>
  <div id="Welcome_div"></div>
  <div id="Filters_div"><%= filters_section %></div>
  <div id="Aspects_div"><%= aspects_section %></div>
</div>
</body>
<script>
    document.getElementById( "menu").innerHTML = get_menu();
    set_section( 'Welcome');
</script>
</body>
</html>
